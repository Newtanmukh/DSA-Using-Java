class Solution {
    public int numberOfSubarrays(int[] nums, int k) {
        int n = nums.length;

        for(int i=0; i<n; i++){
            nums[i] = nums[i] % 2;
        }

        //Now, problem has been reduced to number of subarray of sum k.

        int sum = 0;

        int count = 0;
        HashMap<Integer, Integer> hashMap = new HashMap<>();
        for(int i=0; i<n; i++){
            sum = sum + nums[i];
            if(sum==k)
                count++;

            if(hashMap.containsKey(sum-k)){
                count = count + hashMap.get(sum - k);
            }

            hashMap.put(sum, hashMap.getOrDefault(sum, 0) + 1);

        }

        return count;
    }
}