class Solution
{
    long substrWithAtMostK(String s, int k){
        int i = 0;
        int j = 0;
        
        HashMap<Character, Integer> hashMap = new HashMap<>();
        int len = s.length();
        long ans = 0;
        while(j < len){
            Character last = s.charAt(j);
            hashMap.put(last, hashMap.getOrDefault(last, 0) + 1);
            
            while(hashMap.size() > k){
                Character first = s.charAt(i);
                hashMap.put(first, hashMap.get(first) - 1);
                if(hashMap.get(first)==0){
                    hashMap.remove(first);
                }
                i++;
            }
            ans = ans + (j - i + 1);
            j++;
        }
        
        return ans;
    }
    
    long substrCount (String s, int k) {
        return substrWithAtMostK(s, k) - substrWithAtMostK(s, k-1);
    }
}
