class Solution {
    public String shiftingLetters(String s, int[][] shifts) {
        long prefix[] = new long[s.length()];
        Arrays.fill(prefix, 0);

        for(int i =0;i <shifts.length; i++){
            int[] shift = shifts[i];

            int start = shift[0];
            int end = shift[1];
            int direction = shift[2];

            int val = 1;
            if(direction==0){
                val = -1;
            }

            prefix[start] += val;

            if(end != s.length()-1){
                prefix[end + 1] -= val;
            }
        }
        for(int i = 1; i < s.length(); i++) {
            prefix[i] += prefix[i-1];  // Add this line to compute cumulative sum
        }

        StringBuilder sb = new StringBuilder();
        for(int i=0; i<s.length(); i++){
            long incrementDecrement = ((long)(s.charAt(i) - 'a') + prefix[i]);
            incrementDecrement = (incrementDecrement%26 + 26 ) % 26;
            sb.append((char) ('a' + incrementDecrement));
        }

        return sb.toString();
    }
}