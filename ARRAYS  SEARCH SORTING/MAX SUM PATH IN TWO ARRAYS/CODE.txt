 public int maxPathSum(List<Integer> arr1, List<Integer> arr2) {
        int ptr1 = 0; 
        int ptr2 = 0; 
        int sum1 = 0; 
        int sum2 = 0; 
        int result = 0; 
        int n = arr1.size(); 
        int m = arr2.size(); 

        while (ptr1 < n && ptr2 < m) {
            
            if (arr1.get(ptr1) < arr2.get(ptr2)) {
                sum1 += arr1.get(ptr1); 
                ptr1++;
            } else if (arr1.get(ptr1) > arr2.get(ptr2)) {
                sum2 += arr2.get(ptr2); 
                ptr2++;
            } else {

                result += Math.max(sum1, sum2) + arr1.get(ptr1);
                ptr1++;
                ptr2++;
                sum1 = 0; 
                sum2 = 0; 
            }
        }

        while (ptr1 < n) {
            sum1 += arr1.get(ptr1);
            ptr1++;
        }

        while (ptr2 < m) {
            sum2 += arr2.get(ptr2);
            ptr2++;
        }

        return result + Math.max(sum1, sum2);
    }