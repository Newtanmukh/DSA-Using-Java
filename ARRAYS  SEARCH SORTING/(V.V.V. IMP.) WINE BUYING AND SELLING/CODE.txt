class Solution {
    long wineSelling(int arr[],int n){
        
        int sellIndex = 0;
        int buyIndex = 0;
        
        long ans = 0l;
        
        while(sellIndex < n && buyIndex < n){
            while(sellIndex<n && arr[sellIndex] >=0){
                sellIndex++;
            }
            
            while(buyIndex<n && arr[buyIndex] <=0){
                buyIndex++;
            }
            
            if(buyIndex==n && sellIndex==n){//It means that either all has been brought or all has been sold.
                return ans;//further, if all has been sold , it indirectly means all has been brought and vice versa.
            }
            
            if(Math.abs(arr[sellIndex]) >= Math.abs(arr[buyIndex])){
                ans = ans + Math.abs(sellIndex-buyIndex)*Math.abs(arr[buyIndex]);
           
                arr[sellIndex] = arr[sellIndex] + arr[buyIndex];
                     arr[buyIndex] = 0;
            }else{
                ans = ans + Math.abs(sellIndex-buyIndex)*Math.abs(arr[sellIndex]);
               
                arr[buyIndex] = arr[buyIndex] + arr[sellIndex];
                 arr[sellIndex] = 0;
            }
        }
        
        return ans;
    }
}