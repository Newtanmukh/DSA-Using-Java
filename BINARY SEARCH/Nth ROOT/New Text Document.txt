class Solution
{
    public int NthRoot(int n, int m)
    {
       int low = 1;
       
       int high = m;
       
       while(low <= high){
           int mid = low + (high-low)/2;
            int cost = check(n, m, mid);
           if(cost==0){
               return mid;
           }else if(cost==1){
               high = mid - 1;
           }else{
               low = mid + 1;
           }
       }
       
       return -1;
    }
    
    public int check(int n, int m, int root){
        long ans = (long)Math.pow(root, n);
        long x = (long)m;
        
        if(ans > x)
            return 1;
        if(ans ==x)
            return 0;
            
        return -1;
    }
}