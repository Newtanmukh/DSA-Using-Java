int perfectSum(int arr[], int n, int sum)
	{
        int t[n+1][sum+1];
        memset(t,0,sizeof(t));
        int cnt=1;
        t[0][0]=1;
        for(int i=0;i<n;++i)
        {
            if(arr[i]==0)
            {
                cnt*=2;
                t[i+1][0]=cnt;
            }
            else
            {
                t[i+1][0]=t[i][0];
            }
            
        }
        int mod= (int)1e9+7;
        for(int i=1;i<n+1;++i)
        {
            for(int j=1;j<sum+1;++j)
            {
                if(arr[i-1]<=j)
                {
                    t[i][j]=(t[i-1][j]+t[i-1][j-arr[i-1]])%mod;
                }
                else if(arr[i-1]>j)
                {
                    t[i][j]=t[i-1][j];
                }
            }
        }
        return t[n][sum];
            
	}









 #############################################################  ALTERNATE SOLUTION ######################################










public int perfectSum(int arr[],int n, int sum) 
	{ 
	    
	    int[][] dp = new int[sum+1][n+1];
	    
	    for(int i=0; i<sum+1; i++){
	        if(i==0){
	            Arrays.fill(dp[i], 1);
	        }else{
	            Arrays.fill(dp[i], 0);
	        }
	    }
	    
	    for(int i=0; i<sum+1; i++){
	        for(int j=1; j<n+1; j++){
	            if(i<arr[j-1]){
	                dp[i][j] = dp[i][j-1]%mod;
	            }else{
	                dp[i][j] = ((dp[i][j-1]%mod) + (dp[i - arr[j-1]][j-1]%mod))%mod;
	            }
	        }
	    }
	    
	    return dp[sum][n];
	 
	} 

