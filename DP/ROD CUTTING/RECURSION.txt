int recursion(int[] len, int[] price, int index, int length){
        
        if(length==0 || index==0)
            return 0;
        
        
        // DO NOT Consider this operation, because in this case we want to consider ONLY if the whole length is covered.    
        // if(length<len[index-1])
        //     return recursion(len, price, index-1, length)
        
        if(length<0)
            return Integer.MIN_VALUE;
            
        return Math.max(price[index-1] + recursion(len, price, index, length - len[index-1]),
                                     recursion(len, price, index-1, length));
        
    }
   
    
    public int cutRod(int price[], int n) {
        
       int[] len = new int[n];
       
       for(int i=0; i<n; i++){
           len[i] = i+1;
       }
       
       return recursion(len, price, n, n);
       
    }