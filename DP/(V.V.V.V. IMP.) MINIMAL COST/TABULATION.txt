class Solution {
   
    
    public int minimizeCost(int k, int arr[]) {
       int n = arr.length;
       int[] dp = new int[n];
       Arrays.fill(dp, Integer.MAX_VALUE);
       dp[0] = 0;
       
	//dp[i] stores the minimum cost to reach this index from the 0'th index.

       for(int i=0; i<n; i++)
           for(int j=i+1; j<n && j<=i+k; j++){
               int costToJumpUptoThis = Math.abs(arr[j] - arr[i]) + dp[i];
               dp[j] = Math.min(dp[j], costToJumpUptoThis);
           }
       
       return dp[n-1];
    }
}