class Solution
{
    
    int[][] dp ;
    
    int memoization(String s, String t, int index1, int index2){
        if(index1==0||index2==0)
            return 0;
        
        if(dp[index1][index2] != -1)
            return dp[index1][index2];
        
        if(s.charAt(index1-1)==t.charAt(index2-1)){
            return dp[index1][index2] = 1 + memoization(s, t, index1-1, index2-1);
        }
        
        return dp[index1][index2] = Math.max(memoization(s, t, index1-1, index2),
                        memoization(s, t, index1, index2-1));
    }
    
	public int minOperations(String s, String t) 
	{ 
	    int m = s.length();
	    int n = t.length();
	    
	    dp = new int[m+1][n+1];
	    
	    for(int i=0; i<m+1; i++)
            Arrays.fill(dp[i], -1);
	    
	    return m + n - 2*memoization(s, t, m, n);
	} 
}