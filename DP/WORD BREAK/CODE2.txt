class Solution
{
    static HashSet<String> hashSet;
    static boolean  isPossible;
    
    public static int wordBreak(int n, String s, ArrayList<String> dictionary )
    {
        hashSet = new HashSet<>();
        isPossible = false;
        
        for(int i=0; i<dictionary.size(); i++){
            hashSet.add(dictionary.get(i));
        }
        
        n = s.length();
        
        dfs(0, s, n);
        
        return isPossible ? 1 : 0;
    }
    
    public static void dfs(int pos, String s, int n){
        
        if(pos==n){//it means that all character previous to this were consumed.
            isPossible = true;
            return;
        }
        
        // if(isPossible)
        //     return;
        
        String temp = "";
        
        for(int i=pos; i<n; i++){
            temp = temp + s.charAt(i);
            if(isPossible)//checking here only and quitting incase already there was a match, no need to continue !
                return;
            if(hashSet.contains(temp)){
                dfs(i+1, s, n);
            }
        }
        
    }
}