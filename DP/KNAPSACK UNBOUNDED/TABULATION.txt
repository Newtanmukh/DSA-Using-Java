int knapSack(int n, int W, int val[], int wt[])
    {
          int[][] dp = new int[W+1][n+1];
        
        for(int i=0; i<W+1; i++){
            dp[i][0] = 0;
        }
        
        for(int i=0; i<n+1; i++){
            dp[0][i] = 0;
        }
        
        for(int i=1 ;i<W+1; i++){
            for(int j=1; j<n+1; j++){
                
                if(wt[j-1] > i){
                    dp[i][j] = dp[i][j - 1];
                }else{
                    dp[i][j] = Math.max(dp[i][j-1], val[j - 1] + dp[i - wt[j-1]][j]);
                }
                
            }
        }
        
        return dp[W][n];
    }