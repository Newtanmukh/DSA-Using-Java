
class Solution {
    
    public boolean isCyclic(
                            int node, 
                            boolean[] visited, 
                            boolean[] stack, 
                            ArrayList<ArrayList<Integer>> adj
                            ){
        visited[node] = true;
        stack[node] = true;
        
        for(int neighBour: adj.get(node)){
            if(visited[neighBour]==false){
                if(isCyclic(neighBour, visited, stack, adj))
                    return true;
            }else if(stack[neighBour]==true){
                return true;
            }
        }
        
        stack[node] = false;
        return false;
    }
    
    public boolean isCyclic(int v, ArrayList<ArrayList<Integer>> adj) {
        boolean[] visited = new boolean[v];
        boolean[] stack = new boolean[v];
        
        Arrays.fill(visited, false);
        Arrays.fill(stack, false);
        
        
        for(int i=0; i<v; i++){
            if(visited[i]==false){
                if(isCyclic(i, visited, stack, adj))
                    return true;
            }
        }
        
        return false;
    }
}