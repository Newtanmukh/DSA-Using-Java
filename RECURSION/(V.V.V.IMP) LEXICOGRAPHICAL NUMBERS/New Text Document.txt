class Solution {

    List<Integer> hashSet;
    int max;

    public void dfs(int n){
        // if(digit >= 10 || n>this.max)
        //     return;

        if(n>this.max)
            return;

        this.hashSet.add(n);

        // for(int i=digit; i<10; i++){
        //     dfs(n*10 + i, digit+1);
        // }

        for(int i=0; i<10; i++){
            dfs(n*10 + i);
        }
        
    }

    public List<Integer> lexicalOrder(int n) {
        this.hashSet = new ArrayList<>();
        this.max = n;
        for(int i=1; i<=9; i++){
            dfs(i);
        }

        return this.hashSet;
    }
}