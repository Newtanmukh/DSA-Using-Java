class Solution {

    char FIRST_CHAR = 'a';
    class Trie{
        Trie[] ch;
        int visited;

        Trie(){
            this.ch = new Trie[26];
            this.visited = 0;
        }
    }

    public int[] sumPrefixScores(String[] words) {
        Trie rootNode = new Trie();
        int[] ans = new int[words.length];
        Arrays.fill(ans, 0);

        for(String word: words){
            Trie t = rootNode;
            for(char c: word.toCharArray()){
                int x = c - FIRST_CHAR;
                if(t.ch[x]==null)
                    t.ch[x] = new Trie();

                t.ch[x].visited++;
                t = t.ch[x];
            }
        }
        
        int k = 0;

        for(String word: words){
            int totalVisited = 0;
            Trie t = rootNode;
            for(int i=0; i<word.length(); i++){
                char c = word.charAt(i);
                int x = c - FIRST_CHAR;

                if(t.ch[x].visited==1){
                    //basically if this char is visited only once, 
                    //it means it was due to this string only, and for the subsequent characters also it will be the same case. so just break.
                    totalVisited = totalVisited + word.length() - i;
                    break;
                }

                totalVisited = totalVisited + t.ch[x].visited;
                t = t.ch[x];
            }
            ans[k] = totalVisited;
            k++;
        }

        return ans;
    }
}