/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<List<Integer>> levelOrder(TreeNode root) {
        List<List<Integer>> list = new ArrayList<>();
        if(root==null)
            return list;
        Deque<TreeNode> deque = new ArrayDeque<>();
        deque.addLast(root);


        while(deque.size() > 0){
            int size = deque.size();
            List<Integer> level = new ArrayList<>();

            for(int i=0; i<size; i++){
                TreeNode front = deque.peekFirst();
                deque.removeFirst();

                level.add(front.val);

                if(front.left != null){
                    deque.addLast(front.left);
                }

                if(front.right != null){
                    deque.addLast(front.right);
                }
            }
            list.add(level);
        }

        return list;
    }
}