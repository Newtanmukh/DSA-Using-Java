
    
    static ArrayList<Integer> topView(Node root) {
        
        class Pair{
        Node node;
        int level;
        
        Pair(Node node, int level){
            this.node = node;
            this.level = level;
        }
    }
        Deque<Pair> deque = new ArrayDeque<>();
        
        deque.addLast(new Pair(root, 0));
        
        TreeMap<Integer, Integer> hashMap = new TreeMap<>();
        
        while(deque.size() > 0){
            int size = deque.size();
            
            for(int i=0; i<size; i++){
                Pair front = deque.peekFirst();
                int level = front.level;
                deque.removeFirst();
                
                if(front.node.left!=null)
                    deque.addLast(new Pair(front.node.left, level - 1));
                    
                if(front.node.right!=null)
                    deque.addLast(new Pair(front.node.right, level+1));
                
                
                if(!hashMap.containsKey(level))
                    hashMap.put(level, front.node.data);
            }
        }
        
      return new ArrayList<>(hashMap.values());
        
    }