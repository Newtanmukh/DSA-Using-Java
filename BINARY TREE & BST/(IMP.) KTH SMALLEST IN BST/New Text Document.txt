/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    int counter;
    int kthSmallest;
    int k ;

    public void inorder(TreeNode root){
        if(root==null){
            return;
        }

        inorder(root.left);
        this.counter++;

        if(this.counter==k){
            this.kthSmallest = root.val;
        }

        inorder(root.right);
    }
    public int kthSmallest(TreeNode root, int k) {
        this.counter = 0;
        this.kthSmallest = Integer.MAX_VALUE;
        this.k = k;
        inorder(root);
        return this.kthSmallest;
    }
}